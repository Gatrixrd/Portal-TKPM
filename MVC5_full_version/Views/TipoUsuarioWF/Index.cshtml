@model IEnumerable<ClickFactura_Entidades.BD.Entidades.Cat_TipoUsuarioWF>

@{
    ViewBag.Title = "Tipos de Usuario para Worflow";
}

<div class="pageheader">
    <h2>Tipos de usuario registrados para Workflow</h2>
    <p>
        @Html.ActionLink("Crear nuevo tipo", "Create")
    </p>
</div>


<script type="text/javascript">
        @{ ClickFactura_Entidades.BD.Entidades.Desarrollo_CF _db = new ClickFactura_Entidades.BD.Entidades.Desarrollo_CF();}
        @{int idWF = 0;}
        @{int idTipo = 0;}
        @{string nombreProceso = "";}
        $(document).ready(function () {
                                                               });
</script>


<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.idWF)*@
            @Html.Label("Workflow")
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.nombreRol)*@
            @Html.Label("Rol de autorización")
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.idPadre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.idHijo)
        </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.activo)*@
            @Html.Label("Activo")
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.relevanciaJerarquica)*@
            @Html.Label("Porcentaje de aprobación")
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @*@Html.DisplayFor(modelItem => item.idWF)*@
            @{
                List<KeyValuePair<string, string>> respuestaAux = new List<KeyValuePair<string, string>>();
                List<ClickFactura_Entidades.BD.Entidades.Cat_ProcesosWF> _ProcesoWF = _db.Cat_ProcesosWF.ToList();
                foreach (ClickFactura_Entidades.BD.Entidades.Cat_ProcesosWF wf in _ProcesoWF)
                {
                    string key = wf.idWF.ToString();
                    string value = wf.nombreWF.ToString();
                    respuestaAux.Add(new KeyValuePair<string, string>(key, value));
                }
                IEnumerable<SelectListItem> CategorySelectListAux = respuestaAux.Select(x => new SelectListItem() { Text = x.Value.Trim(), Value = x.Key.Trim() });
                try
                {
                    foreach (var _p in CategorySelectListAux)
                    {
                        if (item.idWF.ToString().Trim().Equals(_p.Value.ToString().Trim()) == true)
                        {
                            nombreProceso = _p.Text;
                        }
                    }
                }
                catch
                {
                    nombreProceso = "No asignado";
                }
                 }
            @Html.Label(nombreProceso)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.nombreRol)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.idPadre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.idHijo)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.activo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.relevanciaJerarquica)
        </td>
        <td>
            @Html.ActionLink("Editar", "Edit", new { id=item.idTipoUsuarioWF }) |
            @*@Html.ActionLink("Detalles", "Details", new { id=item.idTipoUsuarioWF }) |*@
            @Html.ActionLink("Eliminar", "Delete", new { id=item.idTipoUsuarioWF })
        </td>
    </tr>
}

</table>
